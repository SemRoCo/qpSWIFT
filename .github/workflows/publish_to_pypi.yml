name: Publish Python Package

on: push

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools build wheel numpy auditwheel patchelf pybind11 scipy

      - name: Build package
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          cd python
          python3 -m build --wheel -n

      - name: Repair wheel
        run: |
          mkdir -p dist
          cd python
          auditwheel repair dist/*.whl --plat manylinux_2_34_x86_64
          rm dist/*.whl
          mv wheelhouse/*.whl ../dist/

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ matrix.python-version }}
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/qpSWIFT_sparse_bindings
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-distributions-*
          path: dist/
          merge-multiple: true
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/  # remove/comment line when publishing to actual repository
#        user: __token__                                # used before setting up a trusted publisher
#        password: ${{ secrets.PYPI_API_TOKEN }}