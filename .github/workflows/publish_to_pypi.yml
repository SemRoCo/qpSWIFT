name: Publish Python Package

on: push

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python-version == '3.10' && '310' || matrix.python-version == '3.11' && '311' || matrix.python-version == '3.12' && '312' || matrix.python-version == '3.9' && '39' || '38' }}-manylinux_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD: |
            echo "Current directory: $(pwd)"
            echo "Files in project root: $(ls -la)"
            echo "Python directory exists: $(ls -la python/)"
            apt-get install libeigen3 libeigen3-dev cmake
            pip install -r requirements.txt
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
          CIBW_REPAIR_WHEEL_COMMAND: auditwheel repair -w {dest_dir} {wheel}
        run: |
          python -m cibuildwheel python --output-dir wheelhouse

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ matrix.python-version }}
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/qpSWIFT_sparse_bindings
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-distributions-*
          path: dist/
          merge-multiple: true
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/  # remove/comment line when publishing to actual repository
#        user: __token__                                # used before setting up a trusted publisher
#        password: ${{ secrets.PYPI_API_TOKEN }}